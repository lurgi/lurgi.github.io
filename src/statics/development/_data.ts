const DEVELOPMENT: PostPreview[] = [
  {
    type: "Development",
    title: "코드 한 줄 없이 데이터 수집 자동화? MCP로 해봤습니다",
    fileName: "Code-Without-One-Line-Data-Collection-Using-MCP",
    date: "2025-04-17",
    description:
      "Claude AI와 MCP(Model Context Protocol)를 활용해 코드 한 줄 없이 요가 클래스 데이터를 자동 수집하고, Supabase에 저장하는 파이프라인을 구축한 사례를 소개합니다. 크롤링, 위치 변환, 중복 필터링, 이미지 수집까지 모두 자동화한 실제 사례를 확인해보세요.",
    keywords: [
      "MCP",
      "Claude AI",
      "Notion",
      "데이터 수집 자동화",
      "노코드",
      "로우코드",
      "Firecrawl",
      "Supabase",
      "요가 플랫폼",
      "위치 기반 서비스",
      "PostGIS",
      "웹 크롤링 자동화",
      "GPT 자동화",
      "AI 파이프라인",
      "Model Context Protocol",
      "요가 클래스 크롤링",
      "자동 데이터 저장",
      "개발 없는 데이터 수집",
      "숨결",
    ],
  },
  {
    type: "Development",
    title: "Next.js에서 useSWR과 iframe을 함께 사용할 때 발생한 무한 루프 문제 해결하기",
    fileName: "Fixing-Infinite-Loop-Issue-When-Using-useSWR-and-iframe-in-Nextjs",
    date: "2025-03-09",
    description:
      "Next.js에서 useSWR을 사용해 데이터를 가져오고, iframe을 활용해 이메일 템플릿을 미리보기로 표시할 때 발생하는 무한 루프 문제를 해결하는 방법을 알아봅니다.",
    keywords: [
      "Next.js",
      "useSWR",
      "iframe",
      "무한 루프",
      "Next.js 오류",
      "React",
      "Next.js 최적화",
      "SWR API",
      "iframe 문제 해결",
      "React 개발",
      "useSWR 문제",
      "iframe 렌더링",
      "Next.js API 요청 최적화",
    ],
  },
  {
    type: "Development",
    title: "Remix 애플리케이션을 Docker와 GCP로 배포하기",
    fileName: "Deploying-a-Remix-application-with-Docker-and-GCP",
    date: "2025-02-12",
    keywords: [
      "Remix",
      "Docker",
      "GCP",
      "Cloud Run",
      "Google Artifact Registry",
      "Github Actions",
      "CI/CD",
      "서버리스",
      "배포 자동화",
      "환경 변수 주입",
      "Dockerfile 최적화",
      "Node.js",
      "컨테이너 배포",
      "Cloud Build",
      "DevOps",
      "Kubernetes",
      "WebView",
      "풀스택 개발",
      "Vite",
      "Supabase",
      "보안 강화",
      "서비스 확장성",
      "비용 최적화",
      "서버리스 아키텍처",
    ],
  },
  {
    type: "Development",
    title: "Next.js Middleware, 더 간결하고 효율적으로 관리하는 방법",
    fileName: "Making-Nextjs-Middleware-Easier-to-Use",
    date: "2025-01-26",
    description:
      "next-middleware-enhancer를 통해 라우트 기반 미들웨어 관리 방식을 개선하고, 불필요한 if문을 줄이며, 유지보수를 더욱 쉽게 만드는 방법을 소개합니다.",
    keywords: [
      "Next.js",
      "Middleware",
      "Next.js 미들웨어",
      "미들웨어 최적화",
      "Next.js 성능 개선",
      "라우트 기반 미들웨어",
      "웹 개발",
      "JavaScript",
      "TypeScript",
      "Next.js Enhancer",
      "프론트엔드 최적화",
      "미들웨어 관리",
    ],
  },
  {
    type: "Development",
    title: "Next.js Server Action와 React useActionState 알아보기",
    fileName: "Exploring-Nextjs-Server-Action-and-React-useActionState",
    date: "2025-01-03",
    description:
      "Next.js 15 버전에서 새롭게 도입된 Server Action과 React 19의 useActionState를 활용하여 클라이언트-서버 통신을 간소화하고 상태 관리를 효율적으로 처리하는 방법을 알아보세요. Server Action과 useActionState의 사용법과 예제를 통해 최신 데이터 요청 및 mutate 방식의 변화도 살펴봅니다.",
    keywords: [
      "Next.js 15",
      "Server Action",
      "React 19",
      "useActionState",
      "데이터 요청 간소화",
      "상태 관리",
      "클라이언트-서버 통신",
      "데이터 mutate",
      "최신 React 생태계",
      "Tanstack Query 대안",
      "Next.js Server Action 사용법",
      "React 상태 관리",
      "Server Action 예제",
      "useActionState 예제",
      "로딩 상태 관리",
      "클라이언트 상태 관리",
    ],
  },
  {
    type: "Development",
    title: "CSR에서 SSG로 마이그레이션, Github  Pages로 Next.js 배포하기",
    fileName: "Migrating-from-CSR-to-SSG-Deploying-Nextjs-on-GitHub-Pages",
    date: "2025-01-01",
    description:
      "기존 CSR(Client-Side Rendering) 방식 블로그에서 SSG(Static Site Generation) 방식으로 전환한 사례를 공유합니다. Open Graph를 활용한 SNS 링크 신뢰성 향상, 비용 절감, 성능 개선 방법 등을 알아보세요.",
    keywords: [
      "CSR",
      "SSG",
      "Static Site Generation",
      "Next.js",
      "블로그 렌더링 방식",
      "Open Graph",
      "SEO",
      "성능 개선",
      "비용 절감",
      "블로그 개발 사례",
    ],
  },
  {
    type: "Development",
    title: "SSR로 사용자 경험 향상시키기",
    fileName: "Enhancing-UX-with-SSR",
    date: "2024-12-29",
    description:
      "Server-Side Rendering(SSR)을 활용해 웹사이트의 SEO, 초기 로드 속도, 사용자 경험을 한 단계 끌어올리는 방법을 소개합니다. CSR과 SSR의 차이, 성능 실험 결과, 효율적인 혼합 전략 및 React와 최신 웹 기술을 활용한 최적화 사례까지, 실무에 바로 적용 가능한 인사이트를 제공합니다.",
    keywords: [
      "SSR",
      "Server-Side Rendering",
      "CSR",
      "Client-Side Rendering",
      "웹 성능 최적화",
      "SEO 강화",
      "초기 로드 속도",
      "FCP 단축",
      "LCP 개선",
      "TTFB 최적화",
      "React Streaming SSR",
      "웹 캐싱 전략",
      "사용자 경험 향상",
      "SEO 친화적 웹사이트",
      "실무 적용 사례",
      "최신 웹 기술",
    ],
  },
  {
    type: "Development",
    title: "웹 표준의 미래, WebNN으로 만나는 웹 AI",
    fileName: "Future-of-Web-Standards-Exploring-Web-AI-with-WebNN",
    date: "2024-12-27",
    description:
      "WebNN API를 활용해 브라우저에서 고성능 머신러닝 모델을 실행할 수 있는 방법과 WebAI 시대의 변화를 소개합니다. 최신 웹 표준을 통해 사용자 경험을 혁신하고 클라우드 의존성을 줄이는 WebNN의 가능성을 확인해보세요.",
    keywords: [
      "WebNN",
      "WebAI",
      "Frontend Development",
      "브라우저 머신러닝",
      "WebAI Summit",
      "웹 표준",
      "하드웨어 가속",
      "WebNN API",
      "온디바이스 AI",
      "WebAI 기술",
    ],
  },
  {
    type: "Development",
    title: "Zero Run Time CSS 도구들은 왜 컴포넌트 선언 형식이 아닐까?",
    fileName: "Why-Are-Zero-Run-Time-CSS-Tools-Not-Component-Based",
    date: "2024-12-09",
  },
  {
    type: "Development",
    title: "Paint 이전 Macro Task가 실행될 가능성과 React의 useEffect",
    fileName: "Possibility-of-Macro-Tasks-Being-Executed-Before-Paint-and-React-useEffect",
    date: "2024-11-28",
  },
  {
    type: "Development",
    title: "[Apollo Basic] Apollo Client를 이용하여 Supabase GraphQL 요청 보내기",
    fileName: "Apollo-Basic-Apollo-Client-Using-Supabase-GraphQL-Request",
    date: "2024-11-27",
  },
  {
    type: "Development",
    title: "[Settings] GraphQL과 Supabase, Apollo Client 설정",
    fileName: "GraphQL-and-GraphQL-Apollo-Settings",
    date: "2024-11-26",
  },
  {
    type: "Development",
    title: "Tanstack Query의 useQuery 캐싱 매커니즘 분석하기",
    fileName: "Analyzing-the-Caching-Mechanism-of-TanStack-Querys-useQuery",
    date: "2024-11-26",
  },
  {
    type: "Development",
    title: "PopoverMenu 컴포넌트의 createPortal과 합성 이벤트 문제 해결 및 자식 요소 컴포넌트 렌더러 만들기",
    fileName: "Popover-Menu-Create-Portal-Event-Fix-and-Child-Renderer",
    date: "2024-11-16",
  },
  {
    type: "Development",
    title: "크루루 서비스의 자동 로그인 문제와 Tanstack Query 캐싱 이슈 해결기",
    fileName: "Resolving-Auto-Login-Issues-and-TanStack-Query-Caching-Challenges-in-the-Cruru-Service",
    date: "2024-11-13",
  },
  {
    type: "Development",
    title: "Next.js vs Remix 뭐가 더 좋을까?",
    fileName: "Which-Is-Better-Nextjs-or-Remix",
    date: "2024-10-31",
  },
  {
    type: "Development",
    title: "디자인 시스템에 아토믹 디자인 패턴 도입하기",
    fileName: "Adopting-Atomic-Design-Pattern-in-a-Design-System",
    date: "2024-09-15",
  },
  {
    type: "Development",
    title: "옵저버 패턴과 Tanstack Query에서의 옵저버 패턴",
    fileName: "Observer-Pattern-and-the-Use-of-Observer-Pattern-in-TanStack-Query",
    date: "2024-04-08",
  },
];

export default DEVELOPMENT;
